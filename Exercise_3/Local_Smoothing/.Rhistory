y_fit <- rep(NA,length(new_x))
x_train <- x
x_star <-new_x[1]
R <- get_R(x_train,x_star,D)
D
D <- 1
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
kern_func<-normal_kernel()
kern_func<-normal_kernel
W <- get_W(x_train,x_star,h,kern_func)
W
y_pred <- get_est(R,W,y_train)
plot(x,y)
new_x <- seq(10,80,0.01)
get_pred <-function(x_train,x_star,y,D,h,kern_func){
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y_train)
}
return(y_pred)
}
y_fit <- rep(NA,length(new_x))
for(i in 1:length(new_x)){
y_fit[i] <- get_pred(x,new_x[i],y,1,h_min,normal_kernel)
}
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
R
W
y_pred <- get_est(R,W,y_train)
get_est(R,W,y_train)
i
new_x <- seq(12,80,0.01)
get_pred <-function(x_train,x_star,y,D,h,kern_func){
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y_train)
}
return(y_pred)
}
y_fit <- rep(NA,length(new_x))
for(i in 1:length(new_x)){
y_fit[i] <- get_pred(x,new_x[i],y,1,h_min,normal_kernel)
}
(solve(t(R)%*%W%*%R)%*%t(R)%*%W%*%y)
new_x
min(x)
max(x)
new_x <- seq(min(x),max(x),0.01)
get_pred <-function(x_train,x_star,y,D,h,kern_func){
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y_train)
}
return(y_pred)
}
y_fit <- rep(NA,length(new_x))
for(i in 1:length(new_x)){
y_fit[i] <- get_pred(x,new_x[i],y,1,h_min,normal_kernel)
}
D<-1
for(i in 1:length(new_x)){
y_fit[i] <- get_pred(x,new_x[i],y,D,h_min,normal_kernel)
}
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y_train)
R
t(R)%*%W%*%R)%*%t(R)%*%W%*%y_train
(solve(t(R)%*%W%*%R)%*%t(R)%*%W%*%y)
get_W <- function(x,x_star,h,kern_func){
W <- diag(kern_func(x-x_star,h))
return(W/sum(W))
}
get_R <- function(x,x_star,D){
R <- matrix(NA,ncol=D+1,nrow=length(x))
for(i in 1:(D+1)){
R[,i] <- (x-x_star)^(i-1)
}
return(R)
}
get_est <- function(R,W,y){
return((solve(t(R)%*%W%*%R)%*%t(R)%*%W%*%y)[1])
}
h<-0.4
R <- get_R(x_train,x_test[1],2)
W <- get_W(x_train,x_test[1],h,normal_kernel)
get_err <-function(D,h){
err <- rep(NA,n)
for(i in 1:n){
x_star <- x[i]
x_train <- x[-i]
y_train <- y[-i]
y_test <- y[i]
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,normal_kernel)
y_pred <- get_est(R,W,y_train)
err[i] <- (y_test-y_pred)^2
}
return(err)
}
h_err <- rep(NA,length(h_vec))
for(i in 1:length(h_vec)){
h_err[i] <-mean(get_err(1,h_vec[i]))
}
new_x <- seq(min(x),max(x),0.01)
get_pred <-function(x_train,x_star,y,D,h,kern_func){
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y_train)
}
return(y_pred)
}
y_fit <- rep(NA,length(new_x))
D<-1
for(i in 1:length(new_x)){
y_fit[i] <- get_pred(x,new_x[i],y,D,h_min,normal_kernel)
}
R
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y_train)
}
x_train <- x
x_star <- min(x)
y <- y
D = 1
h <-7
kern_func <- normal_kernel
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y_train)
}
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y_train)
R
W
t(R)%*%W
t(R)%*%W%*%R
solve(t(R)%*%W%*%R)
solve(t(R)%*%W%*%R)%*%t(R)
solve(t(R)%*%W%*%R)%*%t(R)%*%W
solve(t(R)%*%W%*%R)%*%t(R)%*%W%*%y
new_x <- seq(min(x),max(x),0.01)
get_pred <-function(x_train,x_star,y,D,h,kern_func){
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y)
}
return(y_pred)
}
y_fit <- rep(NA,length(new_x))
D<-1
for(i in 1:length(new_x)){
y_fit[i] <- get_pred(x,new_x[i],y,D,h_min,normal_kernel)
}
new_x <- seq(min(x),max(x),0.1)
get_pred <-function(x_train,x_star,y,D,h,kern_func){
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y)
}
return(y_pred)
}
y_fit <- rep(NA,length(new_x))
D<-1
for(i in 1:length(new_x)){
y_fit[i] <- get_pred(x,new_x[i],y,D,h_min,normal_kernel)
}
y_fit
plot(x,y)
lines(x,y_fit)
lines(new_x,y_fit)
plot(x,y,col="cyan4")
lines(x,y_fit,lwd=2,col="red")
plot(x,y,col="cyan4")
lines(new_x,y_fit,lwd=2,col="red")
plot(x,y,col="cyan4")
lines(new_x,y_fit,lwd=2,col="red")
plot(x,y,col="cyan4",pch=19)
lines(new_x,y_fit,lwd=2,col="red")
get_pred <-function(x_train,x_star,y,D,h,kern_func){
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y)
}
return(y_pred)
}
new_x <- seq(min(x),max(x),0.1)
y_fit <- rep(NA,length(new_x))
D<-1
for(i in 1:length(new_x)){
y_fit[i] <- get_pred(x,new_x[i],y,D,h_min,normal_kernel)
}
plot(x,y,col="cyan4",pch=19)
lines(new_x,y_fit,lwd=2,col="red")
get_pred <-function(x_train,x_star,y,D,h,kern_func){
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y)
}
return(y_pred)
}
new_x <- seq(min(x),max(x),0.1)
y_fit <- rep(NA,length(new_x))
D<-1
for(i in 1:length(new_x)){
y_fit[i] <- get_pred(x,new_x[i],y,D,h_min,normal_kernel)
}
get_pred <-function(x_train,x_star,y,D,h,kern_func){
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y)
}
return(y_pred)
}
new_x <- seq(min(x),max(x),0.1)
y_fit <- rep(NA,length(new_x))
D<-1
for(i in 1:length(new_x)){
y_fit[i] <- get_pred(x,new_x[i],y,D,h_min,normal_kernel)
}
plot(x,y,col="cyan4",pch=19)
lines(new_x,y_fit,lwd=2,col="red")
df <- read.csv("utilities.csv")
y <- df$gasbill/df$billingdays
x <- df$temp
n<-length(y)
train_idx <- sample(1:n,0.8*n)
y_train <- y[train_idx]
x_train <- x[train_idx]
y_test <- y[-train_idx]
x_test <- x[-train_idx]
normal_kernel <- function(d,h){
##Input: d- distance (scalar), h-bandwith (scalar)
##Output: kernel value (scalar)
return(1/h*dnorm(d/h,mean=0,sd=1))
}
get_W <- function(x,x_star,h,kern_func){
W <- diag(kern_func(x-x_star,h))
return(W/sum(W))
}
get_R <- function(x,x_star,D){
R <- matrix(NA,ncol=D+1,nrow=length(x))
for(i in 1:(D+1)){
R[,i] <- (x-x_star)^(i-1)
}
return(R)
}
get_est <- function(R,W,y){
return((solve(t(R)%*%W%*%R)%*%t(R)%*%W%*%y)[1])
}
h<-0.4
R <- get_R(x_train,x_test[1],2)
W <- get_W(x_train,x_test[1],h,normal_kernel)
a <- solve(t(R)%*%W%*%R)%*%t(R)%*%W%*%y_train
get_err <-function(D,h){
err <- rep(NA,n)
for(i in 1:n){
x_star <- x[i]
x_train <- x[-i]
y_train <- y[-i]
y_test <- y[i]
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,normal_kernel)
y_pred <- get_est(R,W,y_train)
err[i] <- (y_test-y_pred)^2
}
return(err)
}
h_vec <- seq(1,10,1)
h_err <- rep(NA,length(h_vec))
for(i in 1:length(h_vec)){
h_err[i] <-mean(get_err(1,h_vec[i]))
}
h_min <-h_vec[which.min(h_err)]
get_pred <-function(x_train,x_star,y,D,h,kern_func){
for(i in 1:n){
R <- get_R(x_train,x_star,D)
W <- get_W(x_train,x_star,h,kern_func)
y_pred <- get_est(R,W,y)
}
return(y_pred)
}
new_x <- seq(min(x),max(x),0.1)
y_fit <- rep(NA,length(new_x))
D<-1
for(i in 1:length(new_x)){
y_fit[i] <- get_pred(x,new_x[i],y,D,h_min,normal_kernel)
}
plot(x,y,col="cyan4",pch=19)
lines(new_x,y_fit,lwd=2,col="red")
errors <- y-y_fit
plot(errors)
errors <- y-y_fit
plot(errors)
errors
length(erros)
length(errors)
length(y)
length(y_fit)
y_fit_x <- rep(NA,length(x))
D<-1
for(i in 1:length(x)){
y_fit_x[i] <- get_pred(x,x,y,D,h_min,normal_kernel)
}
y_fit_x <- rep(NA,length(x))
D<-1
for(i in 1:length(x)){
y_fit_x[i] <- get_pred(x,x-0.0001,y,D,h_min,normal_kernel)
}
y_fit_x <- rep(NA,length(x))
for(i in 1:length(x)){
y_fit_x[i] <- get_pred(x,x+0.1,y,D,h_min,normal_kernel)
}
y_fit
new_x
x
new_x==x
new_x*10
(new_x*10)%%10
(new_x*10)%%10 ==0
x
sort(x)
sort_x <- sort(x)
y_fit_x <- rep(NA,length(sort_x))
y_fit_x
y_fit
new_x
x
sort_x
new_x[21]
10*(sort_x-9)+1
new_x[10*(sort_x-9)+1]
y_fit_x <- y_fit[10*(sort_x-9)+1]
y_fit_x
sort_x
y
idx_x <- order(x)
sort_x <- x[idx_x]
sort_x
y[idx_x]
y_fit_x-y[idx_x]
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x <- y_fit[10*(sort_x-9)+1]
plot(y_fit_x-y[idx_x])
plot(sort_x,y_fit_x-y[idx_x])
new_x <- seq(min(x),max(x),0.1)
y_fit_log <- rep(NA,length(new_x))
D<-1
for(i in 1:length(new_x)){
y_fit_log[i] <- get_pred(x,new_x[i],log(y),D,h_min,normal_kernel)
}
for(i in 1:length(new_x)){
y_fit_log[i] <- get_pred(x,new_x[i],log(y),D,h_min,normal_kernel)
}
plot(x,y,col="cyan4",pch=19)
lines(new_x,y_fit,lwd=2,col="red")
lines(new_x,y_fit_log,lwd=2,col="red")
plot(x,y,col="cyan4",pch=19)
lines(new_x,y_fit_log,lwd=2,col="red")
plot(x,y,col="cyan4",pch=19)
lines(new_x,y_fit_log,lwd=2,col="red")
plot(x,log(y),col="cyan4",pch=19)
lines(new_x,y_fit_log,lwd=2,col="red")
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x_log <- y_fit_log[10*(sort_x-9)+1]
plot(sort_x,y_fit_x_log-log(y[idx_x]))
lines(new_x,exp(y_fit_log),lwd=2,col="red")
plot(x,y,col="cyan4",pch=19)
lines(new_x,exp(y_fit_log),lwd=2,col="red")
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x_log <- y_fit_log[10*(sort_x-9)+1]
plot(sort_x,exp(y_fit_x_log)-y[idx_x])
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x_log <- y_fit_log[10*(sort_x-9)+1]
plot(sort_x,y_fit_x_log-log(y[idx_x]))
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x <- y_fit[10*(sort_x-9)+1]
plot(sort_x,log(y_fit_x-y[idx_x]))
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x <- y_fit[10*(sort_x-9)+1]
plot(sort_x,y_fit_x-y[idx_x])
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x <- y_fit[10*(sort_x-9)+1]
plot(sort_x,log(y_fit_x)-log(y[idx_x]))
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x <- y_fit[10*(sort_x-9)+1]
plot(sort_x,y_fit_x-y[idx_x])
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x_log <- y_fit_log[10*(sort_x-9)+1]
plot(sort_x,exp(y_fit_x_log)-y[idx_x],col="cyan4",pch=19)
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x_log <- y_fit_log[10*(sort_x-9)+1]
plot(sort_x,y_fit_x_log-log(y[idx_x]),col="cyan4",pch=19)
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x_log <- y_fit_log[10*(sort_x-9)+1]
plot(sort_x,y_fit_x_log-log(y[idx_x]),col="cyan4",pch=19,xlab="x",ylab="Errors")
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x <- y_fit[10*(sort_x-9)+1]
plot(sort_x,y_fit_x-y[idx_x],col="cyan4",pch=19,xlab="x",ylab="Errors")
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x_log <- y_fit_log[10*(sort_x-9)+1]
plot(sort_x,exp(y_fit_x_log-log(y[idx_x])),col="cyan4",pch=19,xlab="x",ylab="Errors")
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x_log <- y_fit_log[10*(sort_x-9)+1]
plot(sort_x,y_fit_x_log-log(y[idx_x]),col="cyan4",pch=19,xlab="x",ylab="Errors")
sse <- sum((y-y_fit)^2)/length(y)
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x <- y_fit[10*(sort_x-9)+1]
err_1 <- y_fit_x-y[idx_x]
plot(sort_x,err_1,col="cyan4",pch=19,xlab="x",ylab="Errors")
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x_log <- y_fit_log[10*(sort_x-9)+1]
err_2 <- exp(y_fit_x_log)-y[idx_x]
plot(sort_x,err_2,col="cyan4",pch=19,xlab="x",ylab="Errors")
idx_x <- order(x)
sort_x <- x[idx_x]
y_fit_x_log <- y_fit_log[10*(sort_x-9)+1]
err_3 <- y_fit_x_log-log(y[idx_x])
plot(sort_x,err_3,col="cyan4",pch=19,xlab="x",ylab="Errors")
sse <- sum((err_1)^2)/length(err_1)
sig_2_hat <- sum((err_1)^2)/length(err_1)
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
lines(new_x,y_fit,lwd=2,col="red")
lines(new_x,y_fit+sig_2_hat*qnorm(0.95,0,1))
lines(new_x,y_fit-sig_2_hat*qnorm(0.95,0,1))
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
lines(new_x,y_fit,lwd=2,col="red")
polygon(c(new_x,rev(new_x)), c(y_fit-sig_2_hat*qnorm(0.95,0,1), y_fit+sig_2_hat*qnorm(0.95,0,1)), border=NA, col=col2rgb("yellow",0.5))
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
lines(new_x,y_fit,lwd=2,col="red")
polygon(c(sort(new_x),rev(sort(new_x))), c(y_fit-sig_2_hat*qnorm(0.95,0,1), y_fit+sig_2_hat*qnorm(0.95,0,1)), border=NA, col=col2rgb("yellow",0.5))
idx_new_x <- order(new_x)
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
idx_new_x <- order(new_x)
lines(new_x,y_fit,lwd=2,col="red")
polygon(c(new_x[idx_new_x],rev(new_x[idx_new_x])), c(y_fit[idx_new_x]-sig_2_hat*qnorm(0.95,0,1), y_fit[idx_new_x]+sig_2_hat*qnorm(0.95,0,1)), border=NA, col=col2rgb("yellow",0.5))
new_x
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
idx_new_x <- order(new_x)
lines(new_x,y_fit,lwd=2,col="red")
polygon(c(new_x[idx_new_x],rev(new_x[idx_new_x])), c(y_fit[idx_new_x]-sig_2_hat*qnorm(0.95,0,1), y_fit[idx_new_x]+sig_2_hat*qnorm(0.95,0,1)), border=NA, col=1)
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
idx_new_x <- order(new_x)
lines(new_x,y_fit,lwd=2,col="red")
polygon(c(new_x[idx_new_x],rev(new_x[idx_new_x])), c(y_fit[idx_new_x]-sig_2_hat*qnorm(0.95,0,1), y_fit[idx_new_x]+sig_2_hat*qnorm(0.95,0,1)), border=NA, density = 0.5)
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
idx_new_x <- order(new_x)
lines(new_x,y_fit,lwd=2,col="red")
polygon(c(new_x[idx_new_x],rev(new_x[idx_new_x])), c(y_fit[idx_new_x]-sig_2_hat*qnorm(0.95,0,1), rev(y_fit[idx_new_x])+sig_2_hat*qnorm(0.95,0,1)), border=NA, col ="cyan4" )
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
idx_new_x <- order(new_x)
lines(new_x,y_fit,lwd=2,col="red")
polygon(c(new_x[idx_new_x],rev(new_x[idx_new_x])), c(y_fit[idx_new_x]-sig_2_hat*qnorm(0.95,0,1), rev(y_fit[idx_new_x])+sig_2_hat*qnorm(0.95,0,1)), border=NA, col ="cornsilk" )
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
idx_new_x <- order(new_x)
lines(new_x,y_fit,lwd=2,col="red")
polygon(c(new_x[idx_new_x],rev(new_x[idx_new_x])), c(y_fit[idx_new_x]-sig_2_hat*qnorm(0.95,0,1), rev(y_fit[idx_new_x])+sig_2_hat*qnorm(0.95,0,1)), border=NA, col =rgb(1, 0, 0,0.5) )
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
idx_new_x <- order(new_x)
lines(new_x,y_fit,lwd=2,col="red")
polygon(c(new_x[idx_new_x],rev(new_x[idx_new_x])), c(y_fit[idx_new_x]-sig_2_hat*qnorm(0.95,0,1), rev(y_fit[idx_new_x])+sig_2_hat*qnorm(0.95,0,1)), border=NA, col =rgb(1, 0, 0,0.3) )
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
idx_new_x <- order(new_x)
lines(new_x,y_fit,lwd=2,col="red")
polygon(c(new_x[idx_new_x],rev(new_x[idx_new_x])), c(y_fit[idx_new_x]-sig_2_hat*qnorm(0.95,0,1), rev(y_fit[idx_new_x])+sig_2_hat*qnorm(0.95,0,1)), border=NA, col =rgb(1, 0, 0,0.2) )
sig_2_hat <- sum((err_1)^2)/length(err_1)
plot(x,y,col="cyan4",pch=19)
idx_new_x <- order(new_x)
lines(new_x,y_fit,lwd=2,col="red")
polygon(c(new_x[idx_new_x],rev(new_x[idx_new_x])), c(y_fit[idx_new_x]-sig_2_hat*qnorm(0.95,0,1), rev(y_fit[idx_new_x])+sig_2_hat*qnorm(0.95,0,1)), border=NA, col =rgb(1, 0, 0,0.1) )
